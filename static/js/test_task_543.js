/**
 * Script espec√≠fico para testar a tarefa 543
 * Garante que ela apare√ßa como conclu√≠da visualmente
 */

async function testTask543() {
    console.log('üîç Testando especificamente a tarefa 543...');
    
    const taskId = '543';
    
    try {
        // 1. Busca dados da tarefa na API
        const response = await fetch(`/backlog/api/tasks/${taskId}`);
        if (!response.ok) {
            throw new Error(`Erro ${response.status}`);
        }
        
        const task = await response.json();
        console.log('üìä Dados da tarefa 543:', task);
        
        // 2. Verifica se est√° marcada como conclu√≠da
        const isCompleted = checkIfTaskCompleted(task);
        console.log(`üéØ Tarefa 543 est√° conclu√≠da: ${isCompleted ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
        
        // 3. Encontra o card na UI
        const taskCard = document.querySelector(`[data-task-id="${taskId}"]`);
        if (!taskCard) {
            console.warn('‚ö†Ô∏è Card da tarefa 543 n√£o encontrado na UI');
            return;
        }
        
        // 4. Verifica se tem os s√≠mbolos visuais corretos
        const hasBadge = taskCard.querySelector('.badge.bg-success');
        const hasOverlay = taskCard.querySelector('.task-completed-overlay');
        
        console.log('üé® Status visual atual:', {
            tem_badge_concluido: !!hasBadge,
            tem_overlay_concluido: !!hasOverlay
        });
        
        // 5. For√ßa atualiza√ß√£o visual se necess√°rio
        if (isCompleted && (!hasBadge || !hasOverlay)) {
            console.log('üîß For√ßando atualiza√ß√£o visual da tarefa 543...');
            updateTaskCardVisual(taskCard, task, isCompleted);
            
            // Verifica novamente
            setTimeout(() => {
                const newBadge = taskCard.querySelector('.badge.bg-success');
                const newOverlay = taskCard.querySelector('.task-completed-overlay');
                
                console.log('‚úÖ Status visual ap√≥s atualiza√ß√£o:', {
                    tem_badge_concluido: !!newBadge,
                    tem_overlay_concluido: !!newOverlay,
                    atualizado_com_sucesso: !!(newBadge && newOverlay)
                });
                
                if (newBadge && newOverlay) {
                    showTask543Success();
                } else {
                    showTask543Warning();
                }
            }, 500);
        } else if (isCompleted && hasBadge && hasOverlay) {
            console.log('üéâ Tarefa 543 j√° est√° com visual correto!');
            showTask543Success();
        } else {
            console.log('‚ÑπÔ∏è Tarefa 543 n√£o est√° marcada como conclu√≠da');
        }
        
    } catch (error) {
        console.error('‚ùå Erro ao testar tarefa 543:', error);
    }
}

function showTask543Success() {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 120px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        z-index: 9999;
        font-weight: bold;
        border: 2px solid #155724;
    `;
    
    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
            <i class="bi bi-check-circle-fill" style="font-size: 18px;"></i>
            <div>
                <div>‚úÖ Tarefa 543 OK!</div>
                <small>S√≠mbolos de conclu√≠do vis√≠veis</small>
            </div>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => notification.remove(), 5000);
}

function showTask543Warning() {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 120px;
        right: 20px;
        background: #ffc107;
        color: #212529;
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        z-index: 9999;
        font-weight: bold;
        border: 2px solid #d39e00;
    `;
    
    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
            <i class="bi bi-exclamation-triangle-fill" style="font-size: 18px;"></i>
            <div>
                <div>‚ö†Ô∏è Tarefa 543 Problema</div>
                <small>S√≠mbolos n√£o aparecem - execute forceUpdateTask(543)</small>
            </div>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => notification.remove(), 8000);
}

// Auto-testa tarefa 543 quando p√°gina carrega
document.addEventListener('DOMContentLoaded', function() {
    // Aguarda um pouco para a p√°gina carregar completamente
    setTimeout(() => {
        const task543Card = document.querySelector('[data-task-id="543"]');
        if (task543Card) {
            console.log('üöÄ Testando tarefa 543 automaticamente...');
            testTask543();
        } else {
            console.log('‚ÑπÔ∏è Tarefa 543 n√£o encontrada na p√°gina atual');
        }
    }, 3000);
});

// Disponibiliza globalmente
window.testTask543 = testTask543;

console.log('üîß Script de teste da tarefa 543 carregado');
console.log('üìù Use testTask543() para testar manualmente'); 